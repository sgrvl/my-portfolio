import Image from 'next/image';
import Head from 'next/head';
import Link from 'next/link';
import data from '../../components/data';
import styled from 'styled-components';
import Github from '../../components/fixedLinks/github';
import Externe from '../../components/fixedLinks/externe';

export async function getStaticProps({ params }) {
	const pageData = Object.keys(data).filter((d) => d === params.slug);

	return {
		props: {
			pageData: data[pageData[0]],
		},
	};
}

export async function getStaticPaths() {
	const paths = Object.keys(data).map((d) => ({
		params: { slug: d },
	}));
	return { paths, fallback: false };
}

const Title = styled.h1`
	color: ${(props) => props.theme.main};
	font-size: clamp(3em, 8vw, 5em);
	text-align: center;
	font-family: 'Merriweather', serif;
	max-width: 736px;
	margin: 4rem auto;
`;

const ImageWrap = styled.div`
	display: flex;
	justify-content: center;
	max-width: 550px;
	@media (max-width: 768px) {
		max-width: 788px;
	}
	@media (min-width: 992px) {
		max-width: 650px;
	}
	@media (min-width: 1200px) {
		max-width: 788px;
	}
	margin: 0 auto;
`;

const TechWrap = styled.div`
	display: flex;
	justify-content: center;
	margin: 2rem 0;
	gap: 2rem;

	img {
		max-height: 48px;
		@media (max-width: 768px) {
			max-height: 32px;
		}
	}
`;

const Description = styled.p`
	text-align: center;
	max-width: 550px;
	color: ${(props) => props.theme.darkshades};
	font-weight: 500;

	@media (max-width: 768px) {
		max-width: 788px;
	}
	@media (min-width: 992px) {
		max-width: 650px;
	}
	@media (min-width: 1200px) {
		max-width: 788px;
	}
	margin: 0 auto;

	a {
		color: ${(props) => props.theme.main};

		&:hover,
		&:visited:hover,
		&:focus,
		&:active {
			color: ${(props) => props.theme.darkshades};
		}

		&:visited,
		&:link {
			color: ${(props) => props.theme.main};
		}
	}
`;

const StyledLink = styled.a`
	display: block;
	text-align: center;
	margin-top: 3rem;
	font-weight: 400;
	color: ${(props) => props.theme.main};

	&:hover,
	&:visited:hover,
	&:focus,
	&:active {
		color: ${(props) => props.theme.darkshades};
	}

	&:visited,
	&:link {
		color: ${(props) => props.theme.main};
	}
`;

const ExterneWrap = styled.div`
	display: flex;
	justify-content: center;
	gap: 1rem;
	margin: 2rem 0;
`;

const PageProjet = ({ pageData }) => (
	<>
		<Head>
			<title>Simon Gravel | {pageData.titre}</title>
			<meta name='description' content='Generated by create next app' />
			<link rel='icon' href='/favicon.ico' />
		</Head>
		<div className='container'>
			<Title>{pageData.titre}</Title>
			<ImageWrap>
				<Image src={pageData.couverture.src} alt={pageData.couverture.alt} width={788} height={381} />
			</ImageWrap>
			<TechWrap>
				{pageData.logos.map((logo, index) => (
					<img key={'logo ' + index} src={logo.src} alt={logo.alt} />
				))}
			</TechWrap>
			{/* dangerouslySet pour le markup */}
			<Description dangerouslySetInnerHTML={{ __html: pageData.texte }} />
			<ExterneWrap>
				{pageData.github && <Github link={pageData.github} width={80} height={80} strokeW={1.5} />}
				{pageData.externe && <Externe link={pageData.externe} />}
			</ExterneWrap>
			<Link href={`/projets/`} passHref>
				<StyledLink>Retour aux projets</StyledLink>
			</Link>
		</div>
	</>
);

export default PageProjet;
